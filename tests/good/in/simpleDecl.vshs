f :: Bool = true;
n :: Int = 423;
x :: Int = let f :: Int = 45 in f * 23;
funApply :: Test = fun (1+1) 1;
cons :: List Int = 1:2:3:4:[];
lambda :: Bool -> Int = \ (x :: Int -> Bool -> Int, y::Int) -> x y;
if1 :: Int = if true && false then 123 else let f :: Int = 45 in f + 23;
if2 :: Int = if true && 13 > y then 123 else 11;
someList :: List Int = [1,2+3,3*19,4];
listOfFunctions :: List Int -> Int = [\(r :: Int) -> 3*r, \(r :: Int) -> r+r];